{"version":3,"sources":["config/config.js","Note/Note.jsx","NoteForm/NoteForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Note","id","window","confirm","this","props","removeNote","className","onClick","handleRemove","noteId","noteContent","Component","NoteForm","addNote","bind","textInput","value","focus","placeholder","ref","input","type","App","state","notes","db","database","child","on","snap","push","key","val","setState","i","length","splice","remove","note","set","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAaeA,G,YAFHC,EAASC,cATH,CACdC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,gD,qBCoBIC,E,kDAxBX,aAAc,wC,gDAId,SAAaC,GACQC,OAAOC,QAAQ,8BAE5BC,KAAKC,MAAMC,WAAWL,K,oBAK9B,WAAS,IAAD,OACJ,OACI,sBAAKM,UAAU,OAAf,UACI,sBACIC,QAAS,kBAAM,EAAKC,aAAa,EAAKJ,MAAMK,SADhD,kBAGA,4BAAIN,KAAKC,MAAMM,qB,GAnBZC,aC6BJC,G,wDA5BX,aAAc,IAAD,8BACT,gBACKC,QAAU,EAAKA,QAAQC,KAAb,gBAFN,E,2CAKb,WACIX,KAAKC,MAAMS,QAAQV,KAAKY,UAAUC,OAClCb,KAAKY,UAAUC,MAAQ,GACvBb,KAAKY,UAAUE,U,oBAGnB,WAAS,IAAD,OACJ,OACI,sBAAKX,UAAU,WAAf,UACI,uBACIY,YAAY,eACZC,IAAK,SAAAC,GAAU,EAAKL,UAAYK,GAChCC,KAAK,SACT,wBACId,QAASJ,KAAKU,QADlB,2B,GAnBOF,cC4FRW,E,kDArFb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXC,MAAO,IAMT,EAAKC,GAAKnC,EAAIoC,WAAWP,MAAMQ,MAAM,SAErC,EAAKd,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKT,WAAa,EAAKA,WAAWS,KAAhB,gBAZP,E,qDAeb,WAAoB,IAAD,OACTU,EAAUrB,KAAKoB,MAAfC,MAERrB,KAAKsB,GAAGG,GAAG,eAAe,SAAAC,GACxBL,EAAMM,KAAK,CACTrB,OAAQoB,EAAKE,IACbrB,YAAamB,EAAKG,MAAMtB,cAE1B,EAAKuB,SAAS,CAAET,aAGlBrB,KAAKsB,GAAGG,GAAG,iBAAiB,SAAAC,GAC1B,IAAI,IAAIK,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,IAC5BV,EAAMU,GAAGzB,SAAWoB,EAAKE,KAC1BP,EAAMY,OAAOF,EAAG,GAGpB,EAAKD,SAAS,CAAET,e,wBAIpB,SAAWf,GACTN,KAAKsB,GAAGE,MAAMlB,GAAQ4B,W,qBAGxB,SAAQC,GAQNnC,KAAKsB,GAAGK,OAAOS,IAAI,CAAC7B,YAAa4B,M,oBAInC,WAAS,IAAD,OACN,OACE,sBAAKhC,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,wDAGF,qBAAKA,UAAU,YAAf,SACE,6BAEEH,KAAKoB,MAAMC,MAAMgB,KAAI,SAAAF,GACnB,OACE,cAAC,EAAD,CACE5B,YAAa4B,EAAK5B,YAClBD,OAAQ6B,EAAK7B,OAEbJ,WAAY,EAAKA,YADZiC,EAAK7B,eASpB,qBAAKH,UAAU,cAAf,SACG,cAAC,EAAD,CAAUO,QAASV,KAAKU,mB,GA9EjBF,aCGH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.301fd7bb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst DB_CONFIG = {\r\n    apiKey: \"AIzaSyC7fL6tVocopov3uljx1asuaFliEbtYzyc\",\r\n    authDomain: \"notesreact-66b17.firebaseapp.com\",\r\n    projectId: \"notesreact-66b17\",\r\n    storageBucket: \"notesreact-66b17.appspot.com\",\r\n    messagingSenderId: \"1001344397073\",\r\n    appId: \"1:1001344397073:web:dbfc714fa7840a002ea6b0\"\r\n}\r\n\r\nconst app = firebase.initializeApp(DB_CONFIG);\r\n\r\nexport default app;","import React, { Component } from 'react';\r\nimport './Note.css';\r\n\r\nclass Note extends Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    handleRemove(id) {\r\n        const response = window.confirm('Estas seguro de eliminar?')\r\n        if (response){\r\n            this.props.removeNote(id);\r\n        }\r\n        return;        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Note\">\r\n                <span\r\n                    onClick={() => this.handleRemove(this.props.noteId) }\r\n                    >&times;</span>\r\n                <p>{this.props.noteContent}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Note;","import React, { Component} from 'react';\r\nimport './NoteForm.css';\r\n\r\nclass NoteForm extends Component {\r\n    constructor(){\r\n        super();\r\n        this.addNote = this.addNote.bind(this);\r\n    }\r\n\r\n    addNote(){\r\n        this.props.addNote(this.textInput.value);\r\n        this.textInput.value = '';\r\n        this.textInput.focus();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"NoteForm\">\r\n                <input \r\n                    placeholder=\"Write a note\"\r\n                    ref={input => {this.textInput = input;}}\r\n                    type=\"text\"/>\r\n                <button\r\n                    onClick={this.addNote}\r\n                    >\r\n                    Add me\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoteForm;","import React, { Component } from 'react';\nimport './App.css';\n\nimport app from './config/config';\nimport 'firebase/database';\n\nimport Note from './Note/Note';\nimport NoteForm from './NoteForm/NoteForm';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      notes: [\n        //{noteId: 1, noteContent: 'note 1'},\n        //{noteId: 2, noteContent: 'note 2'}\n      ]\n    };\n\n    this.db = app.database().ref().child('notes');\n    \n    this.addNote = this.addNote.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n  }\n\n  componentDidMount(){\n    const { notes } = this.state;\n    \n    this.db.on('child_added', snap => {\n      notes.push({\n        noteId: snap.key,\n        noteContent: snap.val().noteContent\n      })\n      this.setState({ notes });\n    });\n    \n    this.db.on('child_removed', snap => {\n      for(let i = 0; i < notes.length; i++){\n        if(notes[i].noteId === snap.key) {\n          notes.splice(i, 1);\n        }\n      }\n      this.setState({ notes });\n    });\n  }\n\n  removeNote(noteId){\n    this.db.child(noteId).remove();\n  }\n\n  addNote(note){\n    /*\n    let { notes } = this.state;\n    notes.push({\n      noteId: notes.length + 1,\n      noteContent: note\n    });\n    */\n    this.db.push().set({noteContent: note});\n    //this.setState({notes});\n  }\n\n  render(){\n    return (\n      <div className=\"notesContainer\">\n        <div className=\"notesHeader\">\n          <h1>React y Firebase App</h1>\n        </div>\n    \n        <div className=\"notesBody\">\n          <ul>\n          {\n            this.state.notes.map(note=>{\n              return(\n                <Note \n                  noteContent={note.noteContent}\n                  noteId={note.noteId}\n                  key={note.noteId}\n                  removeNote={this.removeNote}\n                />\n              )\n            })\n          }\n          </ul>\n        </div>\n    \n        <div className=\"notesFooter\">\n           <NoteForm addNote={this.addNote} />\n        </div>\n    \n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}